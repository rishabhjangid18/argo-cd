name: Build, Push, Update Manifest

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'manifests/**'

permissions:
  contents: write

env:
  ACR_NAME: imageupdate
  ACR_LOGIN_SERVER: imageupdate.azurecr.io
  IMAGE_NAME: myimage
  IMAGE_TAG: ${{ github.run_number }}
  ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
  ARGOCD_APP: myapp
  ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
  ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        run: az acr login --name ${{ env.ACR_NAME }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
          docker push ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  update-manifest:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Update deployment.yaml
        run: |
          echo "Updating deployment manifest with new tag: ${{ env.IMAGE_TAG }}"
          sed -i "s|image:.*|image: ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}|" manifests/deployment.yaml
          cat manifests/deployment.yaml

      - name: Commit and Push changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git pull --rebase origin main
          git add manifests/deployment.yaml
          git commit -m "Update deployment manifest with image tag ${IMAGE_TAG}" || echo "No changes to commit"
          git push origin main

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/

      - name: Sync ArgoCD App
        run: |
          argocd login ${{ env.ARGOCD_SERVER }} --username ${{ env.ARGOCD_USERNAME }} --password ${{ env.ARGOCD_PASSWORD }} --insecure
          argocd app sync ${{ env.ARGOCD_APP }}
